# To list networks
shamrat@shamrat:$ date;docker network ls
Thu Jun 26 11:38:09 AM +06 2025
NETWORK ID     NAME      DRIVER    SCOPE
45d527da9ad4   bridge    bridge    local
db2d02314666   host      host      local
db16aac0d356   none      null      local

# create a bridge network
shamrat@shamrat:$ docker network create --driver bridge br01
0b181502091c9fa5a59049dc091e10c34ee35eab3a9ab6e494e38314409eac33
shamrat@shamrat:$ 

shamrat@shamrat:$ date;docker network ls
Thu Jun 26 11:45:29 AM +06 2025
NETWORK ID     NAME      DRIVER    SCOPE
0b181502091c   br01      bridge    local
45d527da9ad4   bridge    bridge    local
db2d02314666   host      host      local
db16aac0d356   none      null      local
shamrat@shamrat:$ 

# To inspect the created network
shamrat@shamrat:$ docker network inspect br01
[
    {
        "Name": "br01",
        "Id": "0b181502091c9fa5a59049dc091e10c34ee35eab3a9ab6e494e38314409eac33",
        "Created": "2025-06-26T11:45:11.753006405+06:00",
        "Scope": "local",
        "Driver": "bridge",
        "EnableIPv4": true,
        "EnableIPv6": false,
        "IPAM": {
            "Driver": "default",
            "Options": {},
            "Config": [
                {
                    "Subnet": "172.18.0.0/16",
                    "Gateway": "172.18.0.1"
                }
            ]
        },
        "Internal": false,
        "Attachable": false,
        "Ingress": false,
        "ConfigFrom": {
            "Network": ""
        },
        "ConfigOnly": false,
        "Containers": {},
        "Options": {},
        "Labels": {}
    }
]

# Launch containers with the br01 network
shamrat@shamrat:$ docker run -dit --name web1 --network br01 nginx
Unable to find image 'nginx:latest' locally
latest: Pulling from library/nginx
dad67da3f26b: Already exists 
4eb3a9835b30: Pull complete 
021db26e13de: Pull complete 
397cc88dcd41: Pull complete 
5f4a88bd8474: Pull complete 
66467f827546: Pull complete 
f05e87039331: Pull complete 
Digest: sha256:dc53c8f25a10f9109190ed5b59bda2d707a3bde0e45857ce9e1efaa32ff9cbc1
Status: Downloaded newer image for nginx:latest
d8a8a4164485c0d0f9d91f6152a39177038aa93ec260e7dbc3b20cdebfe83519
shamrat@shamrat:$ 
shamrat@shamrat:$ docker run -dit --name web2 --network br01 nginx
c00a9c0e30893646c037edcafe21f739e48b2647c33bc837e6ff7f12fe135e3f

shamrat@shamrat:$ docker ps 
CONTAINER ID   IMAGE     COMMAND                  CREATED         STATUS         PORTS     NAMES
c00a9c0e3089   nginx     "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   80/tcp    web2
d8a8a4164485   nginx     "/docker-entrypoint.…"   2 minutes ago   Up 2 minutes   80/tcp    web1

# Ping the containers within the br01 network

shamrat@shamrat:$ docker exec -it web1 ping web2
OCI runtime exec failed: exec failed: unable to start container process: exec: "ping": executable file not found in $PATH: unknown

- ping connad was net there
- need to install it (iputils-ping)

shamrat@shamrat:$ docker exec -it web1 bash
root@d8a8a4164485:/# 
root@d8a8a4164485:/# uname -r
6.2.0-39-generic
root@d8a8a4164485:/# cat /etc/issue
Debian GNU/Linux 12 \n \l

root@d8a8a4164485:/# ping google.com
bash: ping: command not found
root@d8a8a4164485:/# ping 8.8.8.8
bash: ping: command not found

root@d8a8a4164485:/# apt update
root@d8a8a4164485:/# apt upgrade
root@d8a8a4164485:/# apt install iputils-ping
root@d8a8a4164485:/# ping 8.8.8.8
PING 8.8.8.8 (8.8.8.8) 56(84) bytes of data.
64 bytes from 8.8.8.8: icmp_seq=1 ttl=108 time=48.3 ms
64 bytes from 8.8.8.8: icmp_seq=2 ttl=108 time=47.7 ms

root@d8a8a4164485:/# ping google.com
PING google.com (64.233.170.139) 56(84) bytes of data.
64 bytes from sg-in-f139.1e100.net (64.233.170.139): icmp_seq=1 ttl=97 time=48.1 ms
64 bytes from sg-in-f139.1e100.net (64.233.170.139): icmp_seq=2 ttl=97 time=48.1 ms

## do the same for web2

shamrat@shamrat:$ docker exec -it web1 ping web2
PING web2 (172.18.0.3) 56(84) bytes of data.
64 bytes from web2.br01 (172.18.0.3): icmp_seq=1 ttl=64 time=0.037 ms
64 bytes from web2.br01 (172.18.0.3): icmp_seq=2 ttl=64 time=0.013 ms
64 bytes from web2.br01 (172.18.0.3): icmp_seq=3 ttl=64 time=0.013 ms
^C
--- web2 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2028ms
rtt min/avg/max/mdev = 0.013/0.021/0.037/0.011 ms
shamrat@shamrat:$ 
shamrat@shamrat:$ docker exec -it web2 ping web1
PING web1 (172.18.0.2) 56(84) bytes of data.
64 bytes from web1.br01 (172.18.0.2): icmp_seq=1 ttl=64 time=0.025 ms
64 bytes from web1.br01 (172.18.0.2): icmp_seq=2 ttl=64 time=0.014 ms
64 bytes from web1.br01 (172.18.0.2): icmp_seq=3 ttl=64 time=0.011 ms
64 bytes from web1.br01 (172.18.0.2): icmp_seq=4 ttl=64 time=0.010 ms
^C
--- web1 ping statistics ---
4 packets transmitted, 4 received, 0% packet loss, time 3052ms
rtt min/avg/max/mdev = 0.010/0.015/0.025/0.006 ms

# Expose a container and access the webserver
shamrat@shamrat:$ docker run -d -p 8080:80 --name web nginx
e7be2ddacb4ca115e5080d997f91ce0fea1e23774847f45e0085c9f5a1fd84c8

shamrat@shamrat:$ wget --spider -S http://localhost:8080 2>&1 | grep "HTTP/"
  HTTP/1.1 200 OK



============================================================================================
Usecase demo
============================================================================================
shamrat@shamrat:$ docker network create \
  --driver bridge \
  --subnet 172.20.0.0/16 \
  --ip-range 172.20.240.0/20 \
  br02; date
55478525b4eda824e6c30a73e08efd0cc304070f3b9934536a6383d3d4aec24b
Thu Jun 26 12:13:50 PM +06 2025
shamrat@shamrat:$ 

shamrat@shamrat:$ docker network ls
NETWORK ID     NAME      DRIVER    SCOPE
0b181502091c   br01      bridge    local
55478525b4ed   br02      bridge    local
45d527da9ad4   bridge    bridge    local
db2d02314666   host      host      local
db16aac0d356   none      null      local

shamrat@shamrat:$ docker stop $(docker ps | awk 'NR>1 {print $1}')
e7be2ddacb4c
c00a9c0e3089
d8a8a4164485

## Dynamically assigned ip (by docker) vs Statically assigned ip (by user) to the container

shamrat@shamrat:$ docker run -dit --name app01 --network br02 nginx
d5dcc6f7323f37623af106519ec95a00f90f5d33d58f8363e58137daad838012

shamrat@shamrat:$ docker run -dit --name app02 --network br02 --ip 172.20.10.100 nginx
814d7076113797172283b76d677ffe1ee2b2487d681efe59977deb6e71065dba
shamrat@shamrat:$ 

shamrat@shamrat:$ docker ps
CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS     NAMES
814d70761137   nginx     "/docker-entrypoint.…"   5 seconds ago    Up 4 seconds    80/tcp    app02
d5dcc6f7323f   nginx     "/docker-entrypoint.…"   48 seconds ago   Up 48 seconds   80/tcp    app01
shamrat@shamrat:$ 

shamrat@shamrat:$ docker exec app01 hostname -I 
172.20.240.1 
shamrat@shamrat:$ docker exec app02 hostname -I
172.20.10.100 
